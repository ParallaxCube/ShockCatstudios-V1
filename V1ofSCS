
-- Define the required services
  ---------------------------------------------------------------------------------------------------------------
  -- Required services
  local Players = game:GetService("Players")
  local Workspace = game:GetService("Workspace")
  local localPlayer = Players.LocalPlayer
  local camera = Workspace.CurrentCamera

  -- Color for the ESP (adjustable)
  local espColor = Color3.fromRGB(255, 0, 0)  -- Default red
---------------------------------------------------------------------------------------------------------------
-- Greet the local player
  local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
-- Define the LocalPlayer right away so we can use their name
local localPlayer = Players.LocalPlayer 
local RBXGeneral = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")
-- 1. Greet the local player who is running the script
if localPlayer then
    RBXGeneral:DisplaySystemMessage(string.format("Heyyy!!, %s! Your ShockCatStudio v1 UI is Ready!! (⁠◍⁠•⁠ᴗ⁠•⁠◍⁠)⁠✧⁠*⁠。", localPlayer.DisplayName))
end
---------------------------------------------------------------------------------------------------------------
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
----------------------------------------------------------------------------
--rayfield /\
----------------------------------------------------------------------------

local MainWindow = Rayfield:CreateWindow({
   Name = "ShockCatStudio v1 Welcomes "..  localPlayer.DisplayName .. "!  ᕕ( ᐕ )ᕗ",
   Icon = "paw-print", -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Welcome "..  localPlayer.DisplayName .. "!",
   LoadingSubtitle = "by IamSkitten",
   ShowText = " "..  localPlayer.DisplayName .."'s Ui", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = true,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = "Iamskittenconfigfilenameforfile"..  localPlayer.DisplayName .. "!", -- Create a custom folder for your hub/game
      FileName = "Iamskittenconfigfilename"..  localPlayer.DisplayName .. "!"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System for "..  localPlayer.DisplayName .. "!",
      Note = "the key is provided for "..  localPlayer.DisplayName .. " is '1234' !", -- Use this to tell the user how to get a key
      FileName = "Key41For"..  localPlayer.DisplayName .. "!", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"1234"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
----------------------------------------------------------------------------
--Window Maker 
----------------------------------------------------------------------------
local MainnTab            =    MainWindow:CreateTab  ("Center"                                  ,             "app-window-mac") -- Title, Image
local PlayerTab           =    MainWindow:CreateTab  (" "..  localPlayer.DisplayName .. "!"     ,                    "annoyed") -- Title, Image
local RunningTab          =    MainWindow:CreateTab  ("Stamina"                                 ,             'chevrons-right')
local WallTab             =    MainWindow:CreateTab  ("Visuals"                                 ,                   "scan-eye")
local AutomaticTab        =    MainWindow:CreateTab  ("Automation"                              ,                   'workflow')
local SpoofTab            =    MainWindow:CreateTab  ("Device"                                  ,             'laptop-minimal')
local StunTab             =    MainWindow:CreateTab  ("Stun(s)"                                 ,               'shield-alert')
local SavefileTab         =    MainWindow:CreateTab  ("Savefile!"                               ,     'gallery-horizontal-end')
local StatusTab           =    MainWindow:CreateTab  ("Status"                                  ,                 'settings-2')
local MiscTab             =    MainWindow:CreateTab  ("Misc"                                    ,                        'cog')
local GeneratorTab        =    MainWindow:CreateTab  ("Generators"                              ,                        "cog")
local ETab                =    MainWindow:CreateTab  ("Experimental"                            ,                       "bolt")
local CredsTab            =    MainWindow:CreateTab  ("Creds"                                   ,                        "cog")
local FEBETab                = MainWindow:CreateTab  ("Fake Block Animations"                   ,                        "cog")

----------------------------------------------------------------------------
--Tabs /\ 10+
----------------------------------------------------------------------------
local Section                 = GeneratorTab:CreateSection("GeneratorGUI")
local Button                  = GeneratorTab:CreateButton({
   Name = "Gen Toggle",
   Callback = function()
        -- The function that takes place when the button is pressed
     ----------------------------------------------------------------------------
 
 -- The URL to your script on GitHub
      local scriptUrl = 'https://raw.githubusercontent.com/ParallaxCube/ShockCatstudios-V1/3c3f87630ff0b493b52f23fe875b9f6c0cd38690/Circle%20gen%20button'  -- Replace with your actual GitHub link
      
      -- Use pcall to safely load and execute the script
      local success, result = pcall(function()
         loadstring(game:HttpGet(scriptUrl))()  -- Executes the code from GitHub
      end)

      -- If the script fails to load, notify the user
      if not success then
         notif({"Error", "There was an issue loading the script!", 2})
      else
         notif({"Success", "Script loaded successfully!", 1})
      end
 
----------------------------------------------------------------------------
-- The function that takes place when the button is pressed
end,
})
----------------------------------------------------------------------------
--Auto Gen Btn /\
----------------------------------------------------------------------------

local Button = PlayerTab:CreateButton({
   Name = "ArtistShedletsky",
   Callback = function()
       -- The function that takes place when the button is pressed 
     
     
     
     -- The URL to your script on GitHub
      local scriptUrl = 'https://raw.githubusercontent.com/ParallaxCube/ShockCatstudios-V1/61efe209da5743e89f9bad065c8b1ecfefd12f21/Artshed'  -- Replace with your actual GitHub link
      
      -- Use pcall to safely load and execute the script
      local success, result = pcall(function()
         loadstring(game:HttpGet(scriptUrl))()  -- Executes the code from GitHub
      end)

      -- If the script fails to load, notify the user
      if not success then
         notif({"Error", "There was an issue loading the script!", 2})
      else
         notif({"Success", "Script loaded successfully!", 1})
      end
     
     
  
   -- The function that takes place when the button is pressed
   end,
})
----------------------------------------------------------------------------
local Button = MiscTab:CreateButton({
   Name = "Lag challange",
   Callback = function()
   -- The function that takes place when the button is pressed    

while true do
    print("GET LAGGED")
    task.wait(0.02)
end
   -- The function that takes place when the button is pressed
   end,
})
----------------------------------------------------------------------------
--Lag challange user is agreeing to let their device get laggy! /\
----------------------------------------------------------------------------

local Button = PlayerTab:CreateButton({
   Name = "Spoof (console)",
   Callback = function()
       -- The function that takes place when the button is pressed 
     
     
     
     -- The URL to your script on GitHub
      local scriptUrl = 'https://raw.githubusercontent.com/ParallaxCube/ShockCatstudios-V1/b8491e19c039459f4bd2abc7fded031c3b78ec5e/Spoof%20(Console)'  -- Replace with your actual GitHub link
      
      -- Use pcall to safely load and execute the script
      local success, result = pcall(function()
         loadstring(game:HttpGet(scriptUrl))()  -- Executes the code from GitHub
      end)

      -- If the script fails to load, notify the user
      if not success then
         notif({"Error", "There was an issue loading the script!", 2})
      else
         notif({"Success", "Script loaded successfully!", 1})
      end
     
     
  
   -- The function that takes place when the button is pressed
   end,
})
----------------------------------------------------------------------------
-- Spoof device /\ to console
----------------------------------------------------------------------------
-- Create Tab and Section for FakeBlock functionality
local Section = FEBETab:CreateSection("Fake Block Controls")

-- Function to play the Fake Block Animations
local function playFakeBlockAnimation(animId)
    local char = localPlayer.Character
    if char then
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local anim = Instance.new("Animation")
            anim.AnimationId = "rbxassetid://" .. animId
            local track = humanoid:LoadAnimation(anim)
            track:Play()
        end
    end
end

-- Buttons for each animation mode
FEBETab:CreateButton({
    Name = "Fake Block (Normal)",
    Callback = function()
        playFakeBlockAnimation("72722244508749") -- Normal animation ID
    end
})

FEBETab:CreateButton({
    Name = "Fake Block (M3&4)",
    Callback = function()
        playFakeBlockAnimation("96959123077498") -- M3&4 animation ID
    end
})

FEBETab:CreateButton({
    Name = "Toggle Fake Block GUI",
    Callback = function()
        -- This will toggle the visibility of the Rayfield UI
        Rayfield:ToggleUI()
    end
})
----------------------------------------------------------------------------
--FAKE BLOCK /\
----------------------------------------------------------------------------

local Section = WallTab:CreateSection("ESP Options")
-- Color Pickers for Outline and Fill
local espOutlineColor = Color3.fromRGB(255, 0, 0) -- Default Outline Color
local espFillColor = Color3.fromRGB(0, 255, 0) -- Default Fill Color

WallTab:CreateColorPicker({
    Name = "Outline Color",
    CurrentColor = espOutlineColor,
    Callback = function(Color)
        espOutlineColor = Color
    end
})

WallTab:CreateColorPicker({
    Name = "Fill Color",
    CurrentColor = espFillColor,
    Callback = function(Color)
        espFillColor = Color
    end
})

-- Toggles for ESP, Outline, and Fill
local espEnabled = false
local outlineEnabled = false
local fillEnabled = false

WallTab:CreateToggle({
    Name = "Enable ESP",
    CurrentValue = espEnabled,
    Callback = function(Value)
        espEnabled = Value
        if not espEnabled then
            RemoveESP() -- Function to remove ESP
        end
    end
})

WallTab:CreateToggle({
    Name = "Enable Outline",
    CurrentValue = outlineEnabled,
    Callback = function(Value)
        outlineEnabled = Value
        if espEnabled then
            UpdateESP() -- Update ESP with new settings
        end
    end
})

WallTab:CreateToggle({
    Name = "Enable Fill",
    CurrentValue = fillEnabled,
    Callback = function(Value)
        fillEnabled = Value
        if espEnabled then
            UpdateESP() -- Update ESP with new settings
        end
    end
})

-- Function to add ESP to a player
local function CreateESP(player)
    -- Create BillboardGui to display name and health
    local billboard = Instance.new("BillboardGui")
    billboard.Adornee = player.Character:WaitForChild("Head")
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.Parent = player.Character:WaitForChild("Head")
    billboard.AlwaysOnTop = true

    -- Create TextLabel for Name and HP
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Text = player.DisplayName
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Parent = billboard

    local hpLabel = Instance.new("TextLabel")
    hpLabel.Text = "HP: " .. player.Character.Humanoid.Health
    hpLabel.Size = UDim2.new(1, 0, 0.5, 0)
    hpLabel.Position = UDim2.new(0, 0, 0.5, 0)
    hpLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    hpLabel.BackgroundTransparency = 1
    hpLabel.Parent = billboard

    -- Create Outline and Fill if enabled
    if outlineEnabled then
        local outline = Instance.new("Frame")
        outline.Size = UDim2.new(1.1, 0, 1.1, 0)
        outline.Position = UDim2.new(0, -5, 0, -5)
        outline.BackgroundColor3 = espOutlineColor
        outline.BorderSizePixel = 0
        outline.Parent = billboard
    end

    if fillEnabled then
        local fill = Instance.new("Frame")
        fill.Size = UDim2.new(1, 0, 1, 0)
        fill.Position = UDim2.new(0, 0, 0, 0)
        fill.BackgroundColor3 = espFillColor
        fill.BackgroundTransparency = 0.5
        fill.BorderSizePixel = 0
        fill.Parent = billboard
    end
end

-- Function to update ESP settings (called when toggles or color pickers change)
local function UpdateESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            if espEnabled then
                CreateESP(player) -- Re-create ESP with updated settings
            else
                RemoveESP() -- Remove ESP if disabled
            end
        end
    end
end

-- Function to remove all ESPs (when toggled off)
local function RemoveESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Head") then
            local billboard = player.Character.Head:FindFirstChildOfClass("BillboardGui")
            if billboard then
                billboard:Destroy()
            end
        end
    end
end

-- Listen for new players (when they join)
Players.PlayerAdded:Connect(function(player)
    if espEnabled then
        player.CharacterAdded:Connect(function()
            CreateESP(player)
        end)
    end
end)

-- Initialize the ESP for existing players
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= localPlayer then
        player.CharacterAdded:Connect(function()
            if espEnabled then
                CreateESP(player)
            end
        end)
    end
end

-- Function to continuously update ESPs as health changes
game:GetService("RunService").Heartbeat:Connect(function()
    if espEnabled then
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Character and player.Character:FindFirstChild("Humanoid") then
                local humanoid = player.Character:FindFirstChild("Humanoid")
                local billboard = player.Character:FindFirstChild("Head"):FindFirstChildOfClass("BillboardGui")
                if billboard then
                    local hpLabel = billboard:FindFirstChild("HPLabel")
                    if hpLabel then
                        hpLabel.Text = "HP: " .. humanoid.Health
                    end
                end
            end
        end
    end
end)
----------------------------------------------------------------------------
---Esp stuff /\
----------------------------------------------------------------------------
