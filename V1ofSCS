--[[-- thy script loader!






loadstring(game:HttpGet('https://raw.githubusercontent.com/ParallaxCube/ShockCatstudios-V1/refs/heads/main/V1ofSCS'))()







--]]--


local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
---------------------------------------------------------------------------------------------------------------
--Rayfield top /\
---------------------------------------------------------------------------------------------------------------
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
-- Define the LocalPlayer right away so we can use their name
local localPlayer = Players.LocalPlayer 
local RBXGeneral = TextChatService:WaitForChild("TextChannels"):WaitForChild("RBXGeneral")
-- 1. Greet the local player who is running the script
if localPlayer then
    RBXGeneral:DisplaySystemMessage(string.format("Heyyy!!, %s! Your ShockCat UI is Ready!! ^^ and im so glad your here!! :D", localPlayer.DisplayName))
end

--[[disabled until i can make it useful GAHHHH (greets other playerrs)


Players.PlayerAdded:Connect(function(player)
-- Display a system message in the general chat channel
RBXGeneral:DisplaySystemMessage(string.format("Welcome, %s, to the game!", player.DisplayName))
end)

]]--

---------------------------------------------------------------------------------------------------------------
--Player greeter /\
---------------------------------------------------------------------------------------------------------------
local MainWindow            = Rayfield:CreateWindow({
   Name                     = "ShockCatStudio",
   Icon                     = "paw-print", -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle             = "Welcome, " .. localPlayer.DisplayName .. "!",
   LoadingSubtitle          = "by IamSkitten",
   ShowText                 = " ".. localPlayer.DisplayName .."'s UI!", -- for mobile users to unhide rayfield, change if you'd like
   Theme                    = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes
   ToggleUIKeybind          = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)
   DisableRayfieldPrompts   = false,
   DisableBuildWarnings     = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
   ConfigurationSaving      = {
      Enabled               = true,
      FolderName            = "ShockCatStudiosIamSkittenFolderFile", -- Create a custom folder for your hub/game
      FileName              = "ShockCatStudiosIamSkittenFolder"
   },
   Discord                  = {
      Enabled               = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite                = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins         = true -- Set this to false to make them join the discord every time they load it up
   }, 
   KeySystem                = true, -- Set this to true to use our key system
   KeySettings              = {
      Title                 = "Welcome, " .. localPlayer.DisplayName .. "! It's so great to see you!! (≧∇≦)/",
      Subtitle              = "Your Key for ".. localPlayer.DisplayName .." is 1234",
      Note                  = "No linkkey system for ".. localPlayer.DisplayName .." Since Still in v1", -- Use this to tell the user how to get a key
      FileName              = "IamSkittenskeyfilenameishere", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey               = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite       = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key                   = {"1234"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

---------------------------------------------------------------------------------------------------------------
--Window maker /\
---------------------------------------------------------------------------------------------------------------
local MTab              =   MainWindow:CreateTab   ("Center"              ,   "paw-print") -- Title, Image)
local StunTab           =   MainWindow:CreateTab   ("Stun"                ,         "cog")
local AimTab            =   MainWindow:CreateTab   ("Scope"               ,   "crosshair")
local GenTab            =   MainWindow:CreateTab   ("Generators"          ,   "brain-cog")
local UITab             =   MainWindow:CreateTab   ("UI"                  ,          "tv")
local SettingsTab       =   MainWindow:CreateTab   ("ConFig"              ,         "cog")
local DevTab            =   MainWindow:CreateTab   ("UIfig&Status(s)"     ,   "container")
local NonCatchedTabs    =   MainWindow:CreateTab   ("NonCatchedTabs"      ,   "container")
local Tab               =   NonCatchedTabs


--[[--
local Tab                         =   nil    
local EspTab                      =   nil
local StunTab                     =   nil
local AimTab                      =   nil
local GenTab                      =   nil
local UITab                       =   nil
local SettingsTab                 =   nil
local DevTab                      =   nil
--]]--


---------------------------------------------------------------------------------------------------------------
--Tabs /\
---------------------------------------------------------------------------------------------------------------
local Section = Tab:CreateSection("Quick msg")

local Button = Tab:CreateButton({
   Name = "Devnote",
   Callback = function()
  Rayfield:Notify({
   Title = "A note?",
   Content = ([[
Hello! i have something for you...
no matter what you are going 
through,it will pass.
hold on tight! show 
the world what you’re worth. 
never give up! and remember,
no one is perfect,
not even you, but 
you know what you are?
DESERVING OF LOVE


! ✩♡⸜(｡˃ ᵕ ˂ )⸝♡
              ]]),
   Duration = 6.5,
   Image = "heart-crack",
})
   end,
})
---------------------------------------------------------------------------------------------------------------
-- KickThySelf 
--     \/
---------------------------------------------------------------------------------------------------------------

local Section = Tab:CreateSection("Kick yourself?")

local Button = Tab:CreateButton({
   Name = "Kick?",
   Callback = function()
   -- The function that takes place when the button is pressed
   game.Players.LocalPlayer:Kick("You have been banned from this Experience.")
   end,
})
---------------------------------------------------------------------------------------------------------------
-- SPOOFING LOGIC
---------------------------------------------------------------------------------------------------------------

local SpoofDeviceSelection = "PC" -- Default selection
local SpoofEnabled = false -- Controls the persistent loop

-- Function to fire the remote event with the selected device
local function ApplySpoof(device)
    -- The device must be one of the expected types.
    if device and (device == "Console" or device == "PC" or device == "Mobile") then
        -- Safely attempt to fire the remote event
        pcall(function() 
            -- Assuming Network:FireServerConnection(MethodName, Type, Argument) is the correct API
            Network:FireServerConnection("SetDevice", "REMOTE_EVENT", device)
        end)
    end
end

-- The persistent spoofing loop runs in the background
task.spawn(function()
    while task.wait(1) do -- Fires every 1 second to persistently force the device
        -- Only apply the spoof if the feature is enabled AND a valid device is selected
        if SpoofEnabled and SpoofDeviceSelection ~= "Pick one!" then
            ApplySpoof(SpoofDeviceSelection)
        end
    end
end)

---------------------------------------------------------------------------------------------------------------
-- SPOOFING UI
---------------------------------------------------------------------------------------------------------------

local SpoofSection = Tab:CreateSection("Device Spoofing (Spoof)")

-- 1. Spoof Enable Toggle (recommended for better control)
SpoofSection:CreateToggle({
    Name = "Enable Device Spoofing",
    CurrentValue = false,
    Flag = "DeviceSpoofToggleFlag",
    Callback = function(state)
        SpoofEnabled = state
        if state then
             Rayfield:Notify({
                Title = "Spoofing Active",
                Content = "Spoofing enabled for: " .. SpoofDeviceSelection,
                Duration = 0.4,
                Image = "map-pin",
            })
        else
            Rayfield:Notify({
                Title = "Spoofing Disabled",
                Content = "Spoofing loop stopped.",
                Duration = 0.4,
                Image = "map-pin",
            })
        end
    end,
})

-- 2. Spoof Device Dropdown
SpoofSection:CreateDropdown({
    Name = "Spoofed Device Selection",
    Options = {
      "Console",
      "PC",
      "Mobile",
      "Pick one!"
    },
    
    
    CurrentOption = {"Pick one!"}, -- Set a non-functional default option
    MultipleOptions = false,
    Flag = "Dropdown1forspoofing-ofthydevice",
    Callback = function(Options)
        local newSelection = Options[1] -- Get the single selected option
        
        -- Update the global selection variable used by the persistent loop
        SpoofDeviceSelection = newSelection
        
        if SpoofEnabled and newSelection ~= "Pick one!" then
            -- If spoofing is enabled, apply the change immediately
            ApplySpoof(newSelection)
            Rayfield:Notify({
                Title = "Device Spoof Updated",
                Content = "Spoofing device set to: " .. newSelection,
                Duration = 0.5,
                Image = "map-pin",
            })
        end
    end,
})

---------------------------------------------------------------------------------------------------------------
--Lagmachine \/
---------------------------------------------------------------------------------------------------------------
local Section = Tab:CreateSection("Lag Challange!")

local Button = Tab:CreateButton({
   Name = "Button Example",
   Callback = function()
   -- The function that takes place when the button is pressed
-- FRVR LOOP IF THIS THEN THAT
while true do
print("curious? Well thats what killed the cat!")
    -- Wait for 0.2 seconds between each print to prevent instant thread crash
    task.wait(0.005)
end

   end,
})
---------------------------------------------------------------------------------------------------------------
--THEMES CHOOSER \/
---------------------------------------------------------------------------------------------------------------
-- Create the LONG space by adding several empty sections
Tab:CreateSection(" ")
Tab:CreateSection(" ")




-- THEME CHANGER DROPDOWN
local ThemeSection = Tab:CreateSection("Interface Settings")

local Dropdown = Tab:CreateDropdown({
    Name = "Themes ^w^",
    -- Options must be the exact theme identifier strings.
    Options = {
        "Default",
        "FIRE",
        "AshLand",
        "TOXIC",
        "STONE",
        "RED",
        "BLUE",
        "WHITE",
        "DARK_BLUE_WHITE",
        "BLACK",
        "PINK",
        "OldFilm",
        "AntiPhotosensitivity",
        "GLITCHED",
    },
    CurrentOption = {"Default"},
    MultipleOptions = false,
    Flag = "Dropdowntheme1Ashland",

    Callback = function(Options)
        local selectedTheme = Options[1]
        -- Apply the selected theme
        Rayfield:ApplyTheme(selectedTheme)
        
        -- Set the status for the continuous glitch loop
        -- The loop will only call updateGlitchedTheme() if the current theme is GLITCHED
        is_glitch_active = (selectedTheme == "GLITCHED")
    end,
})
---------------------------------------------------------------------------------------------------------------
--Gen
---------------------------------------------------------------------------------------------------------------

local Button = Tab:CreateButton({
   Name = "gen",
   Callback = function()
   -- The function that takes place when the button is pressed

local p = game.Players.LocalPlayer
local cd = false
local cdT = 2.5


local CLICK_ID = "rbxassetid://0"
local WAIT_ID = "rbxassetid://10620016085"

local function activateGenerator(b, o)
    if cd then return end
    cd = true


    b.Image = WAIT_ID
    o.Color = Color3.fromRGB(150, 0, 0)

    task.spawn(function()
        local m = workspace:FindFirstChild("Map")
        if m and m:FindFirstChild("Ingame") and m.Ingame:FindFirstChild("Map") then
            for _, v in pairs(m.Ingame.Map:GetChildren()) do
                if v:IsA("Model") and v.Name == "Generator" then
                    local r = v:FindFirstChild("Remotes") and v.Remotes:FindFirstChild("RE")
                    if r then r:FireServer() end
                end
            end
        end
    end)

    task.wait(cdT)
    cd = false


    b.Image = CLICK_ID
    o.Color = Color3.new(1, 0, 0)
end

local function make()
    if p.PlayerGui:FindFirstChild("GeneratorGUI") then return end
    local g = Instance.new("ScreenGui", p:WaitForChild("PlayerGui"))
    g.Name = "GeneratorGUI"
    g.ResetOnSpawn = false

    local b = Instance.new("ImageButton", g)
    b.Image = CLICK_ID
    b.Size = UDim2.new(0, 40, 0, 40)
    b.BackgroundColor3 = Color3.new(0, 0, 0)
    b.Active = true
    b.Draggable = true

    local corner = Instance.new("UICorner", b)
    corner.CornerRadius = UDim.new(0, 20)

    local o = Instance.new("UIStroke", b)
    o.Color = Color3.new(1, 0, 0)
    o.Thickness = 3

    local pos = p.PlayerGui:GetAttribute("ButtonPos")
    if pos then
        b.Position = UDim2.new(pos.XScale, pos.XOffset, pos.YScale, pos.YOffset)
    else
        b.Position = UDim2.new(0, 100, 0, 100)
    end

    b:GetPropertyChangedSignal("Position"):Connect(function()
        p.PlayerGui:SetAttribute("ButtonPos", {
            XScale = b.Position.X.Scale,
            XOffset = b.Position.X.Offset,
            YScale = b.Position.Y.Scale,
            YOffset = b.Position.Y.Offset
        })
    end)


    b.MouseButton1Click:Connect(function()
        activateGenerator(b, o)
    end)


    game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
        if processed then return end
        if input.KeyCode == Enum.KeyCode.Z then
            activateGenerator(b, o)
        end
    end)
end

p.CharacterAdded:Connect(function()
    task.wait(1)
    make()
end)

if p.Character then
    task.wait(1)
    make()
end
   
   
   ---------------------------------------------------------------------------------------------------------------
   end,
})



--thy not pass



Rayfield:LoadConfiguration()
